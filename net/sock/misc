SO_INCOMING_CPU
inet_pton()
inet_ntop()
getaddrinfo(), gai_strerror(), https://linux.die.net/man/3/getaddrinfo_a
domain: PF_* (not AF_*)
listen: max backlog?
SO_PRIORITY
SO_RCVBUF /proc/sys/net/core/rmem_default 212992
SO_SNDBUF /proc/sys/net/core/wmem_default 212992
SO_RCVLOWAT, SO_SNDLOWAT
SO_RCVTIMEO, SO_SNDTIMEO
SO_REUSEADDR
SO_REUSEPORT
SO_SNDBUF
F_SETSIG fcntl


UDP: Incorrect. If recv() returns the same length it was given, the message was
either that length or greater. There is no way of telling which. The correct
technique is to use a buffer one greater than the largest possible datagram
expected. Then if you get that length, it must have been an error on the
sender's part.

struct sockaddr_storage

			/* nb_timeout set to M0_TIME_NEVER if disabled */
			if (nb->nb_timeout > now)
				continue;
			nb->nb_flags |= M0_NET_BUF_TIMED_OUT;
			nlx_xo_buf_del(nb); /* cancel if possible; !dequeued */


nlx_xo_buf_add

/proc/sys/fs/epoll/max_user_watches 1668300

EINPROGRESS
              The socket is nonblocking and the connection cannot be
              completed immediately.  (UNIX domain sockets failed with
              EAGAIN instead.)  It is possible to select(2) or poll(2) for
              completion by selecting the socket for writing.  After
              select(2) indicates writability, use getsockopt(2) to read the
              SO_ERROR option at level SOL_SOCKET to determine whether
              connect() completed successfully (SO_ERROR is zero) or
              unsuccessfully (SO_ERROR is one of the usual error codes
              listed here, explaining the reason for the failure).



1. When the connection completes successfully, the descriptor becomes writable (p. 531 of TCPv2).
2. When the connection establishment encounters an error, the descriptor becomes both readable and writable (p. 530 of TCPv2).


TODO-------------

Get rid of #define ntm_mutex ntm_group.s_lock

rpc.c: seg_size/seg_nr functions:

   - rename (they are for netbuf pools)

   - fix for sock

Compare provisioning behaviour

Avoid port collisions: switch to native endpoint names

Support multiple completions for receive buffers (RETAIN)

Changes to RPC-----

Finite timeout on SEND buffers.

List of all queued buffers per rpc machine.

run -xisc-service-ut:remote-error-path,rpc-item-ut:ha-cancel,net-lnet,net-test,reqh-service-ctx-ut:dead-end-conn,rpc-machine-ut:rpc_mc_fini_race,rm-rcredits-ut:debtor-death,snscm_net-ut:cp-send-recv-verify -Osnscm_net-ut -eerror+ -mall

 kernel:Motr panic: (seg_size <= m0_net_domain_get_max_buffer_segment_size(ndom)) at m0_net_buffer_pool_init() /home/517711/p/m/net/buffer_pool.c:91 (last failed: none) [git: v1.4-429-gd1ab1fe-dirty]
