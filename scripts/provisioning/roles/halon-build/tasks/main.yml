#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

#
# Halon build
#
---
- name: dynamically load variables depending on the OS type
  include_vars: '{{ item  }}'
  with_first_found: '{{ ansible_os_family }}.yml'
  tags:
    - halon
    - get-stack

- name: configure 'Fedora-COPR Haskell Stack' repository
  yum_repository:
    name:        petersen-stack
    file:        petersen-stack-epel-7
    description: Copr repo for stack owned by petersen
    baseurl:     https://copr-be.cloud.fedoraproject.org/results/petersen/stack/epel-7-$basearch/
    gpgcheck:    yes
    gpgkey:      https://copr-be.cloud.fedoraproject.org/results/petersen/stack/pubkey.gpg
  when: ansible_os_family == 'RedHat'
  tags: halon

- name: enable get-stack.sh
  set_fact:
    halon_build_deps_pkgs: '{{ halon_build_deps_pkgs | difference("stack") }}'
  tags:
    - get-stack
    - never

- name: install latest 'Haskell Stack' with get-stack.sh script
  when: '"stack" not in halon_build_deps_pkgs'
  block:
    - name: download get-stack.sh
      get_url:
        url:  https://get.haskellstack.org
        dest: /tmp/get-stack.sh
        mode: 0755

    - name: run get-stack.sh
      command: /tmp/get-stack.sh
      args:
        creates: /usr/local/bin/stack
  tags:
    - halon
    - get-stack

- name: install Halon build-time dependencies
  package:
    state: present
    name:  '{{ halon_build_deps_pkgs }}'
  tags:
    - halon

# RabbitMQ is needed for some of the Halon tests
- name: install RabbitMQ
  package: state=present name=rabbitmq-server
  tags:
    - halon
    - rabbitmq

- name: start RabbitMQ
  service: name=rabbitmq-server state=started enabled=yes
  tags:
    - halon
    - rabbitmq
    - start-services

- name: install RabbitMQ cookie
  copy:
    src: /var/lib/rabbitmq/.erlang.cookie
    remote_src: yes
    dest:  ~{{ item }}/
    owner: '{{ item }}'
    group: '{{ item }}'
    mode:  0400
  ignore_errors: yes
  with_items:
    - root
    - vagrant
  tags:
    - halon
    - rabbitmq

- name: enable RabbitMQ WebUI
  command: rabbitmq-plugins enable rabbitmq_management
  register: rmq_plugins
  changed_when: "'Plugin configuration unchanged' not in rmq_plugins.stdout"
  notify: restart rabbitmq-server
  tags:
    - halon
    - rabbitmq
