#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#
Motr testing framework:

1: Test Framework Location: cortx-motr/scripts
2: Test utility file: cortx-motr/scripts/workload/m0workload
   cortx-motr/scripts/workload/
   csv workloads are just for reference purpose.
   Users can create workloads in yaml format from excel format
   using script 'create_workload_from_excel'.
3: Command to test motr mixed workload (containing mixed commands like
   m0cp, m0cat, m0crate, m0motr, dd, etc)
   sudo ./m0workload -t <mixed_workload.yaml>
   sudo ./m0workload -t workload_output_1598442739.yaml
4: Mixed workload file contains different sections like
  4.1: motr: Contains motr config parameters. It contains valid cluster
       parameter values like endpoints, process, profile fids etc.
       We use running cluster parameters. Above parameters are
       replaced by running cluster parameter.
       Check 'hctl status' for above parameters.
       It contains valid motr parameters like layout id, tm queue size etc.
  4.2: mode: It contains 2 supported modes viz. Cluster and Singlenode
       Either one of them is active at a time.
       4.2.1: Cluster mode parameters contain
              app: Type of cluster. 'hare' in our case
              CDF: Path of cluster definition file used by hare
              client_index: Index (starting from 0) of the m0client
              from hctl status
      4.2.2: Singlemode parameters contain
             config_file: motr config file. For example, /etc/motr/conf.xc
             base_port: Used to create dummy endpoints e.g. 100.
  4.3: sandbox_dir: Location of directory where your log files,
       m0trace files will be stored. If this parameter is absent,
       current working directory will be your sandox_dir.
  4.4: timeout: It is used for startup commands like cluster init,
       motr singlenode sys utils.
       It may happen that sometimes cluster, m0tr utilities like m0d,
       m0mkfs fails and keeps on running infinitely.
       To avoid this infinite execution we use this parameter.
       If absent, default value is 120 secs.
  4.5: workloads: It contains multiple batches. Each batch contains multiple
       operations. Each operation is of three fields
       4.5.1: cmd: Name of the operation
              e.g. m0cp, m0crate, m0kv, dd, diff etc.
       4.5.2: params: Parameter to this command. For motr related
              commands, this should not contain motr config parameters.
              It can be in string or dictionary format.
              String format: "-s 4k -o 10:10 -c 100"
              Dictionary format: {-s: 4k, -o: 10:10, -c: 100}
       4.5.3: config_overrides: This parameter is used to override
              motr config parameters. It is optional, if you don't
              want to override motr config parameters fetched from
              cluster setup.
              It can be in string or dictionary format.
              String format: "-l 192.168.7.62@tcp:12345:4:1
                              -H 192.168.7.62@tcp:12345:1:1
                              -p 0x7000000000000001:0x2c
                              -P 0x7200000000000001:0x26 ..."
              Dictionary format: {-l: 192.168.7.62@tcp:12345:4:1
                                  -H: 192.168.7.62@tcp:12345:1:1
                                  -p: 0x7000000000000001:0x2c
                                  -P: 0x7200000000000001:0x26}
    Note: Please refer sample files.

5: m0crate workload file contains different sections like MOTR_CONFIG, Workloads.

6: Command to create mixed and m0crate workloads from excel file.
   sudo ./create_workload_from_excel -t <Excel File>
   For example:
   sudo ./create_workload_from_excel -t sample_workload_excel.xlsx

7: Excel file contains different sheet for each section as below
   Sheet -> Section
   Workloads -> workloads section in mixed workload yaml file.
   m0crate_io_workload -> Entire m0crate io workload yaml file.
   runs_per_batch -> runs per batch in mixed workload yaml file.
   sandbox_dir -> sandbox_dir section in mixed workload yaml file.
   timeout -> timeout section in mixed workload yaml file.
   cluster_param -> cluster section in mixed workload yaml file.
   singlenode_param -> singlenode section in mixed workload yaml file.
   MOTR_CONFIG -> MOTR configuration parameters e.g. end points etc.

8: You can tune parameters in excel sheet and create yaml file out of it and
   use this yaml file to run workloads as below steps.
   8.1: sudo ./create_workload_from_excel -t sample_workload_excel.xlsx
        Above commands will create two files like below
        ./out/workload_output_1598442739.yaml
        cortx-motr/scripts/workload/out/m0crate_workload_batch_1_1598442739.yaml
        cortx-motr/scripts/workload/out/m0crate_workload_batch_2_1598442739.yaml
   8.2: Run workload file out/workload_output_1595205283.yaml
        sudo ./m0_workload -t ./out/workload_output_1598442739.yaml 
