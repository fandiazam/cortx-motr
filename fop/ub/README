#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

FOM micro-benchmark
===================

`fom-ub' is a set of benchmarks that exercise request handler in
different modes of synchronisation.  When used together with profiling
tools (gperftools, sar), it helps to determine performance bottlenecks
of reqh/fom components.

Each of the benchmarks creates FOMs and enqueues them at the request
handler.  Each FOM executes one ->fo_tick() and finishes. The operation
performed by ->fo_tick() depends on the type of benchmark:

  - mem-bytes: reads and writes memory region of size < 256 bytes;

  - mem-KB: ditto, size < 64 KB;

  - mem-MB: ditto, size < 1 MB;

  - shared-mutex: locks the mutex shared between localities, performs
    "mem-KB" operations, unlocks the mutex.

  - mutex-per-locality: locks the mutex associated with current
    locality, performs "mem-KB" operations, unlocks;

  - long-lock: acquires m0_long_lock shared between localities,
    performs "mem-KB" operations, unlocks;

  - block: m0_fom_block_enter(), "mem-KB", m0_fom_block_leave().

Usage
-----

$ CONFIGURE_OPTS=--disable-m0-asserts m0 rebuild
...
$ sudo utils/ub.sh -t fom-ub | sed 's/^        //'
round  1 fom-ub[.......]
               bench: [   iter]    min    max    avg   std   sec/op   op/sec
set:       fom-ub
           mem-bytes: [      1]   2.04   2.04   2.04  0.00% 2.038e+00/4.906e-01
              mem-KB: [      1]   6.34   6.34   6.34  0.00% 6.337e+00/1.578e-01
              mem-MB: [      1]   6.68   6.68   6.68  0.00% 6.676e+00/1.498e-01
        shared-mutex: [      1]  11.95  11.95  11.95  0.00% 1.195e+01/8.371e-02
        mutex-per-lo: [      1]   7.70   7.70   7.70  0.00% 7.697e+00/1.299e-01
           long-lock: [      1]  10.95  10.95  10.95  0.00% 1.095e+01/9.136e-02
               block: [      1]  11.51  11.51  11.51  0.00% 1.151e+01/8.691e-02

$ CONFIGURE_OPTS='--enable-profiler --disable-m0-asserts' m0 rebuild
...
$ sudo utils/ub.sh -t fom-ub | sed 's/^        //'
round  1 fom-ub[......]
               bench: [   iter]    min    max    avg   std   sec/op   op/sec
set:       fom-ub
           mem-bytes: [      1]   1.83   1.83   1.83  0.00% 1.830e+00/5.466e-01
              mem-KB: [      1]   6.52   6.52   6.52  0.00% 6.516e+00/1.535e-01
              mem-MB: [      1]   6.31   6.31   6.31  0.00% 6.309e+00/1.585e-01
        shared-mutex: [      1]  11.40  11.40  11.40  0.00% 1.140e+01/8.770e-02
        mutex-per-lo: [      1]   6.74   6.74   6.74  0.00% 6.740e+00/1.484e-01
           long-lock: [      1]  10.85  10.85  10.85  0.00% 1.085e+01/9.214e-02

$ sudo CPUPROFILE=/tmp/prof.dat utils/ub.sh -t fom-ub
...
$ pprof --text utils/.libs/lt-ub /tmp/prof.dat
Using local file utils/.libs/lt-ub.
Using local file /tmp/prof.dat.
Removing _L_unlock_16 from all stack traces.
Total: 5658 samples
    5408  95.6%  95.6%     5408  95.6% cpu_utilize
     217   3.8%  99.4%      217   3.8% __lll_unlock_wake
       4   0.1%  99.5%        4   0.1% 0x00007ffff7ffe813
       3   0.1%  99.5%        3   0.1% _int_malloc
       3   0.1%  99.6%        3   0.1% free
       2   0.0%  99.6%        2   0.0% brk
       2   0.0%  99.7%        2   0.0% sem_timedwait
       1   0.0%  99.7%        1   0.0% 0x00007ffff7ffe811
       1   0.0%  99.7%        1   0.0% __close_nocancel
       1   0.0%  99.7%        6   0.1% __gettimeofday_internal
       1   0.0%  99.7%        1   0.0% __lll_lock_wait_private
       1   0.0%  99.8%        1   0.0% __lll_unlock_wake_private
       1   0.0%  99.8%        1   0.0% __pthread_mutex_destroy
       1   0.0%  99.8%        1   0.0% __pthread_mutex_lock
       1   0.0%  99.8%        1   0.0% _init
       1   0.0%  99.8%        1   0.0% chan_signal_nr
       1   0.0%  99.8%        1   0.0% fom_state_set (inline)
       1   0.0%  99.9%        1   0.0% m0_fom_fini
       1   0.0%  99.9%        1   0.0% m0_list_link_init
       1   0.0%  99.9%        1   0.0% m0_mutex_lock
       1   0.0%  99.9%        1   0.0% m0_reqh_service_find
       1   0.0%  99.9%        1   0.0% m0_sm_ast_post
       1   0.0%  99.9%        1   0.0% m0_sm_asts_run
       1   0.0% 100.0%        1   0.0% m0_time_set
       1   0.0% 100.0%        1   0.0% m0_trace_allot
       1   0.0% 100.0%        1   0.0% memcpy
       0   0.0% 100.0%        5   0.1% 0x00007ffff7ffe8bb
       0   0.0% 100.0%     1768  31.2% 0x33a1a5a1b1221a76
       0   0.0% 100.0%        1   0.0% fom_exec (inline)
       0   0.0% 100.0%        1   0.0% loc_handler_thread

$ # Asserts increase execution time significantly:
$ m0 rebuild
...
$ sudo utils/ub.sh -t fom-ub | sed 's/^        //'
round  1 fom-ub[.......]
               bench: [   iter]    min    max    avg   std   sec/op   op/
set:       fom-ub
           mem-bytes: [      1]  22.83  22.83  22.83  0.00% 2.283e+01/4.3
              mem-KB: [      1]  27.86  27.86  27.86  0.00% 2.786e+01/3.5
              mem-MB: [      1]  26.87  26.87  26.87  0.00% 2.687e+01/3.7
        shared-mutex: [      1]  28.67  28.67  28.67  0.00% 2.867e+01/3.4
        mutex-per-lo: [      1]  28.73  28.73  28.73  0.00% 2.873e+01/3.4
           long-lock: [      1] 132.70 132.70 132.70  0.00% 1.327e+02/7.5
               block: [      1]  44.45  44.45  44.45  0.00% 4.445e+01/2.2

See also
--------

  * FOM mini-benchmark demonstration
    http://goo.gl/hlvPj
